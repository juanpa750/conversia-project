import { whatsappMultiService } from './server/whatsappMultiService';

async function testWhatsAppMasterSystem() {
  console.log('üß™ Iniciando test del sistema WhatsApp Master...\n');
  
  // Datos de prueba
  const userId = 'd91ec757-59a8-4171-a18e-96c0d60f9160';
  const masterChatbotId = '29';
  
  try {
    console.log('1Ô∏è‚É£ Probando creaci√≥n de sesi√≥n para chatbot master...');
    const result = await whatsappMultiService.createSession(masterChatbotId, userId);
    
    if (result === 'CONNECTED') {
      console.log('‚úÖ WhatsApp ya estaba conectado');
    } else if (result.startsWith('data:image/png;base64,')) {
      console.log('‚úÖ C√≥digo QR generado exitosamente');
      console.log(`üìè Tama√±o del QR: ${result.length} caracteres`);
    } else {
      console.log('‚ö†Ô∏è Resultado inesperado:', result.substring(0, 100) + '...');
    }
    
    console.log('\n2Ô∏è‚É£ Probando obtenci√≥n de sesi√≥n...');
    const session = await whatsappMultiService.getSession(masterChatbotId, userId);
    
    if (session) {
      console.log('‚úÖ Sesi√≥n encontrada:');
      console.log(`   - Chatbot ID: ${session.chatbotId}`);
      console.log(`   - Usuario ID: ${session.userId}`);
      console.log(`   - Conectado: ${session.isConnected}`);
      console.log(`   - √öltima actividad: ${session.lastActivity}`);
    } else {
      console.log('‚ùå No se encontr√≥ la sesi√≥n');
    }
    
    console.log('\n3Ô∏è‚É£ Esperando 5 segundos para simular el escaneo del QR...');
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    console.log('\n4Ô∏è‚É£ Verificando estado actualizado...');
    const updatedSession = await whatsappMultiService.getSession(masterChatbotId, userId);
    
    if (updatedSession) {
      console.log(`‚úÖ Estado actualizado - Conectado: ${updatedSession.isConnected}`);
    }
    
    console.log('\nüéØ Test completado exitosamente!');
    console.log('\nüìã Resumen:');
    console.log('   ‚úÖ Servicio multi-chat inicializado');
    console.log('   ‚úÖ Sesi√≥n creada correctamente');
    console.log('   ‚úÖ QR generado (o ya conectado)');
    console.log('   ‚úÖ Gesti√≥n de sesiones funcionando');
    
    console.log('\nüìå Pr√≥ximos pasos:');
    console.log('   1. El chatbot master (ID: 29) est√° listo');
    console.log('   2. Otros chatbots pueden clonar su configuraci√≥n');
    console.log('   3. Sistema multi-chat operativo');
    
  } catch (error) {
    console.error('‚ùå Error durante el test:', error);
    console.error('Stack trace:', error.stack);
  }
}

// Funci√≥n para limpiar al finalizar
async function cleanup() {
  try {
    console.log('\nüßπ Limpiando recursos...');
    await whatsappMultiService.cleanup();
    console.log('‚úÖ Limpieza completada');
  } catch (error) {
    console.error('‚ùå Error durante limpieza:', error);
  }
  process.exit(0);
}

// Ejecutar test
testWhatsAppMasterSystem()
  .then(() => {
    console.log('\n‚è∞ Test completado. Presiona Ctrl+C para salir.');
  })
  .catch(console.error);

// Manejar cierre limpio
process.on('SIGINT', cleanup);
process.on('SIGTERM', cleanup);